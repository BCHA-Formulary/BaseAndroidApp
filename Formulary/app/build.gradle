apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.bcha.formulary"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 1
        versionName "0.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        // temporary keystore for release builds, uses built-in debug keystore. if you want to test a custom keystore,
        // you need a .jks file and it in your .android directory (/Users/<username>/.android/), and modify the file path (relative)
        androidDebugKey {
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storeFile file('debug.keystore')
            storePassword 'android'
        }
    }
    buildTypes {
        debug {
            buildConfigField "boolean", "BUILD_DEBUG", "true"
            minifyEnabled false
        }
        release {
            buildConfigField "boolean", "BUILD_DEBUG", "false"
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    // Configure only for each module that uses Java 8
    // language features (either in its source code or
    // through dependencies).
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    // == Java Lint ==
    lintOptions {
        abortOnError false
        lintConfig file("../lint.xml")
    }
}

allprojects {
    repositories {
        jcenter()
        mavenCentral()
        maven { url 'https://maven.google.com' }
        maven { url "https://dl.bintray.com/drummer-aidan/maven/" }
    }
}

configurations {
    ktlint
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // == Support Libraries ==
    // Backwards compat libraries
    implementation 'androidx.appcompat:appcompat:1.0.2'
    // Constraint Layout
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    // Recycler View
//    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    // Tab layout for dots
//    implementation 'com.google.android.material:material:1.0.0'
    // Card View
//    implementation 'androidx.cardview:cardview:1.0.0'

    // == Dependency Inject ==
    // ButterKnife
    implementation 'com.jakewharton:butterknife:10.1.0'
    kapt 'com.jakewharton:butterknife-compiler:10.1.0'

    // == Dialog ==
    // Material Dialog core TODO 2.0 beta currently does not work, wait for release
//    implementation 'com.afollestad.material-dialogs:core:0.9.6.0'

    // == Image Helper ==
    // Glide image cache
//    implementation 'com.github.bumptech.glide:glide:4.8.0'
//    kapt 'com.github.bumptech.glide:compiler:4.8.0'

    // == Repository ==
    // OKHttp - Network
//    implementation "com.squareup.okhttp3:okhttp:3.11.0" //http helper

    // == Data ==
//    // Google Gson - Json Parser
//    implementation 'com.google.code.gson:gson:2.8.5'
//    // RxAndroid
//    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
//    // Because RxAndroid releases are few and far between, it is recommended you also
//    // explicitly depend on RxJava's latest version for bug fixes and new features.
//    implementation 'io.reactivex.rxjava2:rxjava:2.2.2' //RxJava

    // Firebase
    implementation 'com.google.firebase:firebase-core:17.0.0'

    // == Date and Time ==
    // Backport of java.time package (JSR-310)
    implementation 'com.jakewharton.threetenabp:threetenabp:1.1.0'
    testImplementation('org.threeten:threetenbp:1.3.6') {
        exclude group: 'com.jakewharton.threetenabp', module: 'threetenabp'
    }

    // == Debug ==
    // Timber - Log
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // == DevOps ==
    // Leak Canary - Memory leaks
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.1'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.1'
    // Optional, if you use support library fragments:
    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.1'

    // == Testing ==
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // mockito
    testImplementation "org.mockito:mockito-core:${rootProject.ext.mockitoVersion}"
    androidTestImplementation "org.mockito:mockito-android:${rootProject.ext.mockitoVersion}"

    // roboelectric
    testImplementation "org.robolectric:robolectric:3.6.1" // Integration test - robolectric
    testImplementation "org.robolectric:shadows-support-v4:3.3.2" // robolectric add on for fragment testing

    // === Lint ==
    // kotlin lint
    ktlint "com.github.shyiko:ktlint:0.23.0"
}

// Force all support libraries to use the same version
configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion "${rootProject.ext.supportLibVersion}"
            }
        }
    }
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/shyiko/ktlint#usage for more
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    main = "com.github.shyiko.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}